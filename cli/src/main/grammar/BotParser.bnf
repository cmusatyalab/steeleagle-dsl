{
  // only for the compiler, not the IDE
  generate=[
    java='11'
    psi-factory='no'
    visitor='no'
  ]
  generatePsi=false

  // we only need the parser and element types.
  parserClass='org.steeleagle.parser.BotPsiParser'
  elementTypeHolderClass='org.steeleagle.parser.BotPsiElementTypes'
  elementTypeClass='org.steeleagle.parser.BotPsiElementType'
  tokenTypeClass='org.steeleagle.parser.BotPsiTokenType'
}

// file structure
file ::= task mission

// defining the task
task ::= TASK_KW <<braced task_decl*>>
task_decl ::= (TASK_DETECT_KW | TASK_TRACK_KW) task_name task_body
task_body ::= <<braced <<commaSep attributes>>>>
private attributes ::= attribute*
attribute ::=  ID <<coloned attribute_expr>>
    //attribute expression: could be number, name, or list of waypoints
attribute_expr ::= NUMBER | name | <<square_bracked <<commaSep <<paren waypoint>> >> >>
waypoint ::= NUMBER COMMA NUMBER COMMA NUMBER

task_name ::= name
name ::= ID

// defining the mission
mission ::= MISSION_KW <<braced mission_content>>
mission_content ::= mission_start_decl
mission_start_decl ::= MISSION_START_KW mission_start_body
mission_start_body ::= <<braced task_name>>

//| (mission_start_decl mission_self_adaptive_decl*)
//mission_self_adaptive_decl ::= MISSION_SELFADAPTIVE_KW mission_sa_body

//mission_sa_body ::= <<braced ID>> // need to modify into given when then


// meta rules
// we can improve the parsing by producing generically from a 'commaSep' rule
meta coloned ::= COLON <<param>>
meta commaSep ::= <<param>> (COMMA <<param>>) *
meta paren ::= LPAREN <<param>> RPAREN
meta square_bracked ::= LSQUA <<param>> RSQUA
private meta braced ::= LBRACE <<param>> RBRACE
